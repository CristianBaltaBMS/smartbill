/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgExtension;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgExtensionRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgExtensionDao extends DAOImpl<PgExtensionRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension, Long> {

    /**
     * Create a new PgExtensionDao without any configuration
     */
    public PgExtensionDao() {
        super(PgExtension.PG_EXTENSION, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension.class);
    }

    /**
     * Create a new PgExtensionDao with an attached configuration
     */
    public PgExtensionDao(Configuration configuration) {
        super(PgExtension.PG_EXTENSION, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgExtension.PG_EXTENSION.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchByOid(Long... values) {
        return fetch(PgExtension.PG_EXTENSION.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension fetchOneByOid(Long value) {
        return fetchOne(PgExtension.PG_EXTENSION.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchOptionalByOid(Long value) {
        return fetchOptional(PgExtension.PG_EXTENSION.OID, value);
    }

    /**
     * Fetch records that have <code>extname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchRangeOfExtname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgExtension.PG_EXTENSION.EXTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchByExtname(String... values) {
        return fetch(PgExtension.PG_EXTENSION.EXTNAME, values);
    }

    /**
     * Fetch a unique record that has <code>extname = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension fetchOneByExtname(String value) {
        return fetchOne(PgExtension.PG_EXTENSION.EXTNAME, value);
    }

    /**
     * Fetch a unique record that has <code>extname = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchOptionalByExtname(String value) {
        return fetchOptional(PgExtension.PG_EXTENSION.EXTNAME, value);
    }

    /**
     * Fetch records that have <code>extowner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchRangeOfExtowner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgExtension.PG_EXTENSION.EXTOWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extowner IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchByExtowner(Long... values) {
        return fetch(PgExtension.PG_EXTENSION.EXTOWNER, values);
    }

    /**
     * Fetch records that have <code>extnamespace BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchRangeOfExtnamespace(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgExtension.PG_EXTENSION.EXTNAMESPACE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extnamespace IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchByExtnamespace(Long... values) {
        return fetch(PgExtension.PG_EXTENSION.EXTNAMESPACE, values);
    }

    /**
     * Fetch records that have <code>extrelocatable BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchRangeOfExtrelocatable(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PgExtension.PG_EXTENSION.EXTRELOCATABLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extrelocatable IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchByExtrelocatable(Boolean... values) {
        return fetch(PgExtension.PG_EXTENSION.EXTRELOCATABLE, values);
    }

    /**
     * Fetch records that have <code>extversion BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchRangeOfExtversion(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgExtension.PG_EXTENSION.EXTVERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extversion IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchByExtversion(String... values) {
        return fetch(PgExtension.PG_EXTENSION.EXTVERSION, values);
    }

    /**
     * Fetch records that have <code>extconfig BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchRangeOfExtconfig(Long[] lowerInclusive, Long[] upperInclusive) {
        return fetchRange(PgExtension.PG_EXTENSION.EXTCONFIG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extconfig IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchByExtconfig(Long[]... values) {
        return fetch(PgExtension.PG_EXTENSION.EXTCONFIG, values);
    }

    /**
     * Fetch records that have <code>extcondition BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchRangeOfExtcondition(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgExtension.PG_EXTENSION.EXTCONDITION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>extcondition IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgExtension> fetchByExtcondition(String[]... values) {
        return fetch(PgExtension.PG_EXTENSION.EXTCONDITION, values);
    }
}
