/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgPolicy;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgPolicyRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgPolicyDao extends DAOImpl<PgPolicyRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy, Long> {

    /**
     * Create a new PgPolicyDao without any configuration
     */
    public PgPolicyDao() {
        super(PgPolicy.PG_POLICY, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy.class);
    }

    /**
     * Create a new PgPolicyDao with an attached configuration
     */
    public PgPolicyDao(Configuration configuration) {
        super(PgPolicy.PG_POLICY, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgPolicy.PG_POLICY.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchByOid(Long... values) {
        return fetch(PgPolicy.PG_POLICY.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy fetchOneByOid(Long value) {
        return fetchOne(PgPolicy.PG_POLICY.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchOptionalByOid(Long value) {
        return fetchOptional(PgPolicy.PG_POLICY.OID, value);
    }

    /**
     * Fetch records that have <code>polname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchRangeOfPolname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgPolicy.PG_POLICY.POLNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>polname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchByPolname(String... values) {
        return fetch(PgPolicy.PG_POLICY.POLNAME, values);
    }

    /**
     * Fetch records that have <code>polrelid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchRangeOfPolrelid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgPolicy.PG_POLICY.POLRELID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>polrelid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchByPolrelid(Long... values) {
        return fetch(PgPolicy.PG_POLICY.POLRELID, values);
    }

    /**
     * Fetch records that have <code>polcmd BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchRangeOfPolcmd(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgPolicy.PG_POLICY.POLCMD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>polcmd IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchByPolcmd(String... values) {
        return fetch(PgPolicy.PG_POLICY.POLCMD, values);
    }

    /**
     * Fetch records that have <code>polpermissive BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchRangeOfPolpermissive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PgPolicy.PG_POLICY.POLPERMISSIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>polpermissive IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchByPolpermissive(Boolean... values) {
        return fetch(PgPolicy.PG_POLICY.POLPERMISSIVE, values);
    }

    /**
     * Fetch records that have <code>polroles BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchRangeOfPolroles(Long[] lowerInclusive, Long[] upperInclusive) {
        return fetchRange(PgPolicy.PG_POLICY.POLROLES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>polroles IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchByPolroles(Long[]... values) {
        return fetch(PgPolicy.PG_POLICY.POLROLES, values);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchRangeOfPolqual(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(PgPolicy.PG_POLICY.POLQUAL, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchByPolqual(Object... values) {
        return fetch(PgPolicy.PG_POLICY.POLQUAL, values);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchRangeOfPolwithcheck(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(PgPolicy.PG_POLICY.POLWITHCHECK, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPolicy> fetchByPolwithcheck(Object... values) {
        return fetch(PgPolicy.PG_POLICY.POLWITHCHECK, values);
    }
}
