/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgOpclass;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgOpclassRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgOpclassDao extends DAOImpl<PgOpclassRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass, Long> {

    /**
     * Create a new PgOpclassDao without any configuration
     */
    public PgOpclassDao() {
        super(PgOpclass.PG_OPCLASS, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass.class);
    }

    /**
     * Create a new PgOpclassDao with an attached configuration
     */
    public PgOpclassDao(Configuration configuration) {
        super(PgOpclass.PG_OPCLASS, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpclass.PG_OPCLASS.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchByOid(Long... values) {
        return fetch(PgOpclass.PG_OPCLASS.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass fetchOneByOid(Long value) {
        return fetchOne(PgOpclass.PG_OPCLASS.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchOptionalByOid(Long value) {
        return fetchOptional(PgOpclass.PG_OPCLASS.OID, value);
    }

    /**
     * Fetch records that have <code>opcmethod BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchRangeOfOpcmethod(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpclass.PG_OPCLASS.OPCMETHOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opcmethod IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchByOpcmethod(Long... values) {
        return fetch(PgOpclass.PG_OPCLASS.OPCMETHOD, values);
    }

    /**
     * Fetch records that have <code>opcname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchRangeOfOpcname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgOpclass.PG_OPCLASS.OPCNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opcname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchByOpcname(String... values) {
        return fetch(PgOpclass.PG_OPCLASS.OPCNAME, values);
    }

    /**
     * Fetch records that have <code>opcnamespace BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchRangeOfOpcnamespace(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpclass.PG_OPCLASS.OPCNAMESPACE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opcnamespace IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchByOpcnamespace(Long... values) {
        return fetch(PgOpclass.PG_OPCLASS.OPCNAMESPACE, values);
    }

    /**
     * Fetch records that have <code>opcowner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchRangeOfOpcowner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpclass.PG_OPCLASS.OPCOWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opcowner IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchByOpcowner(Long... values) {
        return fetch(PgOpclass.PG_OPCLASS.OPCOWNER, values);
    }

    /**
     * Fetch records that have <code>opcfamily BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchRangeOfOpcfamily(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpclass.PG_OPCLASS.OPCFAMILY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opcfamily IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchByOpcfamily(Long... values) {
        return fetch(PgOpclass.PG_OPCLASS.OPCFAMILY, values);
    }

    /**
     * Fetch records that have <code>opcintype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchRangeOfOpcintype(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpclass.PG_OPCLASS.OPCINTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opcintype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchByOpcintype(Long... values) {
        return fetch(PgOpclass.PG_OPCLASS.OPCINTYPE, values);
    }

    /**
     * Fetch records that have <code>opcdefault BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchRangeOfOpcdefault(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PgOpclass.PG_OPCLASS.OPCDEFAULT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opcdefault IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchByOpcdefault(Boolean... values) {
        return fetch(PgOpclass.PG_OPCLASS.OPCDEFAULT, values);
    }

    /**
     * Fetch records that have <code>opckeytype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchRangeOfOpckeytype(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpclass.PG_OPCLASS.OPCKEYTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opckeytype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpclass> fetchByOpckeytype(Long... values) {
        return fetch(PgOpclass.PG_OPCLASS.OPCKEYTYPE, values);
    }
}
