/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgDefaultAcl;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgDefaultAclRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgDefaultAclDao extends DAOImpl<PgDefaultAclRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl, Long> {

    /**
     * Create a new PgDefaultAclDao without any configuration
     */
    public PgDefaultAclDao() {
        super(PgDefaultAcl.PG_DEFAULT_ACL, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl.class);
    }

    /**
     * Create a new PgDefaultAclDao with an attached configuration
     */
    public PgDefaultAclDao(Configuration configuration) {
        super(PgDefaultAcl.PG_DEFAULT_ACL, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgDefaultAcl.PG_DEFAULT_ACL.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchByOid(Long... values) {
        return fetch(PgDefaultAcl.PG_DEFAULT_ACL.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl fetchOneByOid(Long value) {
        return fetchOne(PgDefaultAcl.PG_DEFAULT_ACL.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchOptionalByOid(Long value) {
        return fetchOptional(PgDefaultAcl.PG_DEFAULT_ACL.OID, value);
    }

    /**
     * Fetch records that have <code>defaclrole BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchRangeOfDefaclrole(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgDefaultAcl.PG_DEFAULT_ACL.DEFACLROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>defaclrole IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchByDefaclrole(Long... values) {
        return fetch(PgDefaultAcl.PG_DEFAULT_ACL.DEFACLROLE, values);
    }

    /**
     * Fetch records that have <code>defaclnamespace BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchRangeOfDefaclnamespace(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgDefaultAcl.PG_DEFAULT_ACL.DEFACLNAMESPACE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>defaclnamespace IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchByDefaclnamespace(Long... values) {
        return fetch(PgDefaultAcl.PG_DEFAULT_ACL.DEFACLNAMESPACE, values);
    }

    /**
     * Fetch records that have <code>defaclobjtype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchRangeOfDefaclobjtype(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgDefaultAcl.PG_DEFAULT_ACL.DEFACLOBJTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>defaclobjtype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchByDefaclobjtype(String... values) {
        return fetch(PgDefaultAcl.PG_DEFAULT_ACL.DEFACLOBJTYPE, values);
    }

    /**
     * Fetch records that have <code>defaclacl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchRangeOfDefaclacl(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgDefaultAcl.PG_DEFAULT_ACL.DEFACLACL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>defaclacl IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgDefaultAcl> fetchByDefaclacl(String[]... values) {
        return fetch(PgDefaultAcl.PG_DEFAULT_ACL.DEFACLACL, values);
    }
}
