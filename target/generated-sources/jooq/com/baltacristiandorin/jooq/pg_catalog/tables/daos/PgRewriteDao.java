/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgRewrite;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgRewriteRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgRewriteDao extends DAOImpl<PgRewriteRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite, Long> {

    /**
     * Create a new PgRewriteDao without any configuration
     */
    public PgRewriteDao() {
        super(PgRewrite.PG_REWRITE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite.class);
    }

    /**
     * Create a new PgRewriteDao with an attached configuration
     */
    public PgRewriteDao(Configuration configuration) {
        super(PgRewrite.PG_REWRITE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgRewrite.PG_REWRITE.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchByOid(Long... values) {
        return fetch(PgRewrite.PG_REWRITE.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite fetchOneByOid(Long value) {
        return fetchOne(PgRewrite.PG_REWRITE.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchOptionalByOid(Long value) {
        return fetchOptional(PgRewrite.PG_REWRITE.OID, value);
    }

    /**
     * Fetch records that have <code>rulename BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchRangeOfRulename(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgRewrite.PG_REWRITE.RULENAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rulename IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchByRulename(String... values) {
        return fetch(PgRewrite.PG_REWRITE.RULENAME, values);
    }

    /**
     * Fetch records that have <code>ev_class BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchRangeOfEvClass(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgRewrite.PG_REWRITE.EV_CLASS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ev_class IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchByEvClass(Long... values) {
        return fetch(PgRewrite.PG_REWRITE.EV_CLASS, values);
    }

    /**
     * Fetch records that have <code>ev_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchRangeOfEvType(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgRewrite.PG_REWRITE.EV_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ev_type IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchByEvType(String... values) {
        return fetch(PgRewrite.PG_REWRITE.EV_TYPE, values);
    }

    /**
     * Fetch records that have <code>ev_enabled BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchRangeOfEvEnabled(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgRewrite.PG_REWRITE.EV_ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ev_enabled IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchByEvEnabled(String... values) {
        return fetch(PgRewrite.PG_REWRITE.EV_ENABLED, values);
    }

    /**
     * Fetch records that have <code>is_instead BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchRangeOfIsInstead(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PgRewrite.PG_REWRITE.IS_INSTEAD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_instead IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchByIsInstead(Boolean... values) {
        return fetch(PgRewrite.PG_REWRITE.IS_INSTEAD, values);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchRangeOfEvQual(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(PgRewrite.PG_REWRITE.EV_QUAL, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchByEvQual(Object... values) {
        return fetch(PgRewrite.PG_REWRITE.EV_QUAL, values);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchRangeOfEvAction(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(PgRewrite.PG_REWRITE.EV_ACTION, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRewrite> fetchByEvAction(Object... values) {
        return fetch(PgRewrite.PG_REWRITE.EV_ACTION, values);
    }
}
