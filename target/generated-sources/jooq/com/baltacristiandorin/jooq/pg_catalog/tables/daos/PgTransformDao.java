/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgTransform;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgTransformRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgTransformDao extends DAOImpl<PgTransformRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform, Long> {

    /**
     * Create a new PgTransformDao without any configuration
     */
    public PgTransformDao() {
        super(PgTransform.PG_TRANSFORM, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform.class);
    }

    /**
     * Create a new PgTransformDao with an attached configuration
     */
    public PgTransformDao(Configuration configuration) {
        super(PgTransform.PG_TRANSFORM, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTransform.PG_TRANSFORM.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchByOid(Long... values) {
        return fetch(PgTransform.PG_TRANSFORM.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform fetchOneByOid(Long value) {
        return fetchOne(PgTransform.PG_TRANSFORM.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchOptionalByOid(Long value) {
        return fetchOptional(PgTransform.PG_TRANSFORM.OID, value);
    }

    /**
     * Fetch records that have <code>trftype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchRangeOfTrftype(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTransform.PG_TRANSFORM.TRFTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>trftype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchByTrftype(Long... values) {
        return fetch(PgTransform.PG_TRANSFORM.TRFTYPE, values);
    }

    /**
     * Fetch records that have <code>trflang BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchRangeOfTrflang(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTransform.PG_TRANSFORM.TRFLANG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>trflang IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchByTrflang(Long... values) {
        return fetch(PgTransform.PG_TRANSFORM.TRFLANG, values);
    }

    /**
     * Fetch records that have <code>trffromsql BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchRangeOfTrffromsql(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgTransform.PG_TRANSFORM.TRFFROMSQL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>trffromsql IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchByTrffromsql(String... values) {
        return fetch(PgTransform.PG_TRANSFORM.TRFFROMSQL, values);
    }

    /**
     * Fetch records that have <code>trftosql BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchRangeOfTrftosql(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgTransform.PG_TRANSFORM.TRFTOSQL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>trftosql IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTransform> fetchByTrftosql(String... values) {
        return fetch(PgTransform.PG_TRANSFORM.TRFTOSQL, values);
    }
}
