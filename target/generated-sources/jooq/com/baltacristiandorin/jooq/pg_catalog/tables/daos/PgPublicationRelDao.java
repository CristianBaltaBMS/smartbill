/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgPublicationRel;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgPublicationRelRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgPublicationRelDao extends DAOImpl<PgPublicationRelRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel, Long> {

    /**
     * Create a new PgPublicationRelDao without any configuration
     */
    public PgPublicationRelDao() {
        super(PgPublicationRel.PG_PUBLICATION_REL, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel.class);
    }

    /**
     * Create a new PgPublicationRelDao with an attached configuration
     */
    public PgPublicationRelDao(Configuration configuration) {
        super(PgPublicationRel.PG_PUBLICATION_REL, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgPublicationRel.PG_PUBLICATION_REL.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchByOid(Long... values) {
        return fetch(PgPublicationRel.PG_PUBLICATION_REL.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel fetchOneByOid(Long value) {
        return fetchOne(PgPublicationRel.PG_PUBLICATION_REL.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchOptionalByOid(Long value) {
        return fetchOptional(PgPublicationRel.PG_PUBLICATION_REL.OID, value);
    }

    /**
     * Fetch records that have <code>prpubid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchRangeOfPrpubid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgPublicationRel.PG_PUBLICATION_REL.PRPUBID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>prpubid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchByPrpubid(Long... values) {
        return fetch(PgPublicationRel.PG_PUBLICATION_REL.PRPUBID, values);
    }

    /**
     * Fetch records that have <code>prrelid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchRangeOfPrrelid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgPublicationRel.PG_PUBLICATION_REL.PRRELID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>prrelid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchByPrrelid(Long... values) {
        return fetch(PgPublicationRel.PG_PUBLICATION_REL.PRRELID, values);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchRangeOfPrqual(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(PgPublicationRel.PG_PUBLICATION_REL.PRQUAL, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchByPrqual(Object... values) {
        return fetch(PgPublicationRel.PG_PUBLICATION_REL.PRQUAL, values);
    }

    /**
     * Fetch records that have <code>prattrs BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchRangeOfPrattrs(Object[] lowerInclusive, Object[] upperInclusive) {
        return fetchRange(PgPublicationRel.PG_PUBLICATION_REL.PRATTRS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>prattrs IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgPublicationRel> fetchByPrattrs(Object[]... values) {
        return fetch(PgPublicationRel.PG_PUBLICATION_REL.PRATTRS, values);
    }
}
