/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgReplicationOrigin;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgReplicationOriginRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgReplicationOriginDao extends DAOImpl<PgReplicationOriginRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin, Long> {

    /**
     * Create a new PgReplicationOriginDao without any configuration
     */
    public PgReplicationOriginDao() {
        super(PgReplicationOrigin.PG_REPLICATION_ORIGIN, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin.class);
    }

    /**
     * Create a new PgReplicationOriginDao with an attached configuration
     */
    public PgReplicationOriginDao(Configuration configuration) {
        super(PgReplicationOrigin.PG_REPLICATION_ORIGIN, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin object) {
        return object.getRoident();
    }

    /**
     * Fetch records that have <code>roident BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin> fetchRangeOfRoident(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgReplicationOrigin.PG_REPLICATION_ORIGIN.ROIDENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>roident IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin> fetchByRoident(Long... values) {
        return fetch(PgReplicationOrigin.PG_REPLICATION_ORIGIN.ROIDENT, values);
    }

    /**
     * Fetch a unique record that has <code>roident = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin fetchOneByRoident(Long value) {
        return fetchOne(PgReplicationOrigin.PG_REPLICATION_ORIGIN.ROIDENT, value);
    }

    /**
     * Fetch a unique record that has <code>roident = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin> fetchOptionalByRoident(Long value) {
        return fetchOptional(PgReplicationOrigin.PG_REPLICATION_ORIGIN.ROIDENT, value);
    }

    /**
     * Fetch records that have <code>roname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin> fetchRangeOfRoname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgReplicationOrigin.PG_REPLICATION_ORIGIN.RONAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>roname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin> fetchByRoname(String... values) {
        return fetch(PgReplicationOrigin.PG_REPLICATION_ORIGIN.RONAME, values);
    }

    /**
     * Fetch a unique record that has <code>roname = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin fetchOneByRoname(String value) {
        return fetchOne(PgReplicationOrigin.PG_REPLICATION_ORIGIN.RONAME, value);
    }

    /**
     * Fetch a unique record that has <code>roname = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgReplicationOrigin> fetchOptionalByRoname(String value) {
        return fetchOptional(PgReplicationOrigin.PG_REPLICATION_ORIGIN.RONAME, value);
    }
}
