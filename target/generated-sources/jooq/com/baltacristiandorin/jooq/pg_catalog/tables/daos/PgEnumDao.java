/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgEnum;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgEnumRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgEnumDao extends DAOImpl<PgEnumRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum, Long> {

    /**
     * Create a new PgEnumDao without any configuration
     */
    public PgEnumDao() {
        super(PgEnum.PG_ENUM, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum.class);
    }

    /**
     * Create a new PgEnumDao with an attached configuration
     */
    public PgEnumDao(Configuration configuration) {
        super(PgEnum.PG_ENUM, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgEnum.PG_ENUM.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum> fetchByOid(Long... values) {
        return fetch(PgEnum.PG_ENUM.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum fetchOneByOid(Long value) {
        return fetchOne(PgEnum.PG_ENUM.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum> fetchOptionalByOid(Long value) {
        return fetchOptional(PgEnum.PG_ENUM.OID, value);
    }

    /**
     * Fetch records that have <code>enumtypid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum> fetchRangeOfEnumtypid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgEnum.PG_ENUM.ENUMTYPID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enumtypid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum> fetchByEnumtypid(Long... values) {
        return fetch(PgEnum.PG_ENUM.ENUMTYPID, values);
    }

    /**
     * Fetch records that have <code>enumsortorder BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum> fetchRangeOfEnumsortorder(Float lowerInclusive, Float upperInclusive) {
        return fetchRange(PgEnum.PG_ENUM.ENUMSORTORDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enumsortorder IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum> fetchByEnumsortorder(Float... values) {
        return fetch(PgEnum.PG_ENUM.ENUMSORTORDER, values);
    }

    /**
     * Fetch records that have <code>enumlabel BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum> fetchRangeOfEnumlabel(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgEnum.PG_ENUM.ENUMLABEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enumlabel IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgEnum> fetchByEnumlabel(String... values) {
        return fetch(PgEnum.PG_ENUM.ENUMLABEL, values);
    }
}
