/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgForeignDataWrapper;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgForeignDataWrapperRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgForeignDataWrapperDao extends DAOImpl<PgForeignDataWrapperRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper, Long> {

    /**
     * Create a new PgForeignDataWrapperDao without any configuration
     */
    public PgForeignDataWrapperDao() {
        super(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper.class);
    }

    /**
     * Create a new PgForeignDataWrapperDao with an attached configuration
     */
    public PgForeignDataWrapperDao(Configuration configuration) {
        super(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchByOid(Long... values) {
        return fetch(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper fetchOneByOid(Long value) {
        return fetchOne(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchOptionalByOid(Long value) {
        return fetchOptional(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.OID, value);
    }

    /**
     * Fetch records that have <code>fdwname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchRangeOfFdwname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fdwname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchByFdwname(String... values) {
        return fetch(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWNAME, values);
    }

    /**
     * Fetch a unique record that has <code>fdwname = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper fetchOneByFdwname(String value) {
        return fetchOne(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWNAME, value);
    }

    /**
     * Fetch a unique record that has <code>fdwname = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchOptionalByFdwname(String value) {
        return fetchOptional(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWNAME, value);
    }

    /**
     * Fetch records that have <code>fdwowner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchRangeOfFdwowner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWOWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fdwowner IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchByFdwowner(Long... values) {
        return fetch(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWOWNER, values);
    }

    /**
     * Fetch records that have <code>fdwhandler BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchRangeOfFdwhandler(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWHANDLER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fdwhandler IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchByFdwhandler(Long... values) {
        return fetch(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWHANDLER, values);
    }

    /**
     * Fetch records that have <code>fdwvalidator BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchRangeOfFdwvalidator(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWVALIDATOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fdwvalidator IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchByFdwvalidator(Long... values) {
        return fetch(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWVALIDATOR, values);
    }

    /**
     * Fetch records that have <code>fdwacl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchRangeOfFdwacl(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWACL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fdwacl IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchByFdwacl(String[]... values) {
        return fetch(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWACL, values);
    }

    /**
     * Fetch records that have <code>fdwoptions BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchRangeOfFdwoptions(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWOPTIONS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fdwoptions IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignDataWrapper> fetchByFdwoptions(String[]... values) {
        return fetch(PgForeignDataWrapper.PG_FOREIGN_DATA_WRAPPER.FDWOPTIONS, values);
    }
}
