/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgForeignTable;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgForeignTableRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgForeignTableDao extends DAOImpl<PgForeignTableRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable, Long> {

    /**
     * Create a new PgForeignTableDao without any configuration
     */
    public PgForeignTableDao() {
        super(PgForeignTable.PG_FOREIGN_TABLE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable.class);
    }

    /**
     * Create a new PgForeignTableDao with an attached configuration
     */
    public PgForeignTableDao(Configuration configuration) {
        super(PgForeignTable.PG_FOREIGN_TABLE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable object) {
        return object.getFtrelid();
    }

    /**
     * Fetch records that have <code>ftrelid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable> fetchRangeOfFtrelid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgForeignTable.PG_FOREIGN_TABLE.FTRELID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ftrelid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable> fetchByFtrelid(Long... values) {
        return fetch(PgForeignTable.PG_FOREIGN_TABLE.FTRELID, values);
    }

    /**
     * Fetch a unique record that has <code>ftrelid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable fetchOneByFtrelid(Long value) {
        return fetchOne(PgForeignTable.PG_FOREIGN_TABLE.FTRELID, value);
    }

    /**
     * Fetch a unique record that has <code>ftrelid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable> fetchOptionalByFtrelid(Long value) {
        return fetchOptional(PgForeignTable.PG_FOREIGN_TABLE.FTRELID, value);
    }

    /**
     * Fetch records that have <code>ftserver BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable> fetchRangeOfFtserver(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgForeignTable.PG_FOREIGN_TABLE.FTSERVER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ftserver IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable> fetchByFtserver(Long... values) {
        return fetch(PgForeignTable.PG_FOREIGN_TABLE.FTSERVER, values);
    }

    /**
     * Fetch records that have <code>ftoptions BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable> fetchRangeOfFtoptions(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgForeignTable.PG_FOREIGN_TABLE.FTOPTIONS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ftoptions IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignTable> fetchByFtoptions(String[]... values) {
        return fetch(PgForeignTable.PG_FOREIGN_TABLE.FTOPTIONS, values);
    }
}
