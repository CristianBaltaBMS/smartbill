/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgInherits;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgInheritsRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgInheritsDao extends DAOImpl<PgInheritsRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits, Record2<Long, Integer>> {

    /**
     * Create a new PgInheritsDao without any configuration
     */
    public PgInheritsDao() {
        super(PgInherits.PG_INHERITS, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits.class);
    }

    /**
     * Create a new PgInheritsDao with an attached configuration
     */
    public PgInheritsDao(Configuration configuration) {
        super(PgInherits.PG_INHERITS, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits.class, configuration);
    }

    @Override
    public Record2<Long, Integer> getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits object) {
        return compositeKeyRecord(object.getInhrelid(), object.getInhseqno());
    }

    /**
     * Fetch records that have <code>inhrelid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits> fetchRangeOfInhrelid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgInherits.PG_INHERITS.INHRELID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inhrelid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits> fetchByInhrelid(Long... values) {
        return fetch(PgInherits.PG_INHERITS.INHRELID, values);
    }

    /**
     * Fetch records that have <code>inhparent BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits> fetchRangeOfInhparent(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgInherits.PG_INHERITS.INHPARENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inhparent IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits> fetchByInhparent(Long... values) {
        return fetch(PgInherits.PG_INHERITS.INHPARENT, values);
    }

    /**
     * Fetch records that have <code>inhseqno BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits> fetchRangeOfInhseqno(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PgInherits.PG_INHERITS.INHSEQNO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inhseqno IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits> fetchByInhseqno(Integer... values) {
        return fetch(PgInherits.PG_INHERITS.INHSEQNO, values);
    }

    /**
     * Fetch records that have <code>inhdetachpending BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits> fetchRangeOfInhdetachpending(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PgInherits.PG_INHERITS.INHDETACHPENDING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>inhdetachpending IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInherits> fetchByInhdetachpending(Boolean... values) {
        return fetch(PgInherits.PG_INHERITS.INHDETACHPENDING, values);
    }
}
