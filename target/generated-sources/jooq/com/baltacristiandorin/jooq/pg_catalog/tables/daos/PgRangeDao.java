/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgRange;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgRangeRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgRangeDao extends DAOImpl<PgRangeRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange, Long> {

    /**
     * Create a new PgRangeDao without any configuration
     */
    public PgRangeDao() {
        super(PgRange.PG_RANGE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange.class);
    }

    /**
     * Create a new PgRangeDao with an attached configuration
     */
    public PgRangeDao(Configuration configuration) {
        super(PgRange.PG_RANGE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange object) {
        return object.getRngtypid();
    }

    /**
     * Fetch records that have <code>rngtypid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchRangeOfRngtypid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgRange.PG_RANGE.RNGTYPID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rngtypid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchByRngtypid(Long... values) {
        return fetch(PgRange.PG_RANGE.RNGTYPID, values);
    }

    /**
     * Fetch a unique record that has <code>rngtypid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange fetchOneByRngtypid(Long value) {
        return fetchOne(PgRange.PG_RANGE.RNGTYPID, value);
    }

    /**
     * Fetch a unique record that has <code>rngtypid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchOptionalByRngtypid(Long value) {
        return fetchOptional(PgRange.PG_RANGE.RNGTYPID, value);
    }

    /**
     * Fetch records that have <code>rngsubtype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchRangeOfRngsubtype(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgRange.PG_RANGE.RNGSUBTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rngsubtype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchByRngsubtype(Long... values) {
        return fetch(PgRange.PG_RANGE.RNGSUBTYPE, values);
    }

    /**
     * Fetch records that have <code>rngmultitypid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchRangeOfRngmultitypid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgRange.PG_RANGE.RNGMULTITYPID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rngmultitypid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchByRngmultitypid(Long... values) {
        return fetch(PgRange.PG_RANGE.RNGMULTITYPID, values);
    }

    /**
     * Fetch a unique record that has <code>rngmultitypid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange fetchOneByRngmultitypid(Long value) {
        return fetchOne(PgRange.PG_RANGE.RNGMULTITYPID, value);
    }

    /**
     * Fetch a unique record that has <code>rngmultitypid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchOptionalByRngmultitypid(Long value) {
        return fetchOptional(PgRange.PG_RANGE.RNGMULTITYPID, value);
    }

    /**
     * Fetch records that have <code>rngcollation BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchRangeOfRngcollation(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgRange.PG_RANGE.RNGCOLLATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rngcollation IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchByRngcollation(Long... values) {
        return fetch(PgRange.PG_RANGE.RNGCOLLATION, values);
    }

    /**
     * Fetch records that have <code>rngsubopc BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchRangeOfRngsubopc(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgRange.PG_RANGE.RNGSUBOPC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rngsubopc IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchByRngsubopc(Long... values) {
        return fetch(PgRange.PG_RANGE.RNGSUBOPC, values);
    }

    /**
     * Fetch records that have <code>rngcanonical BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchRangeOfRngcanonical(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgRange.PG_RANGE.RNGCANONICAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rngcanonical IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchByRngcanonical(String... values) {
        return fetch(PgRange.PG_RANGE.RNGCANONICAL, values);
    }

    /**
     * Fetch records that have <code>rngsubdiff BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchRangeOfRngsubdiff(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgRange.PG_RANGE.RNGSUBDIFF, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rngsubdiff IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgRange> fetchByRngsubdiff(String... values) {
        return fetch(PgRange.PG_RANGE.RNGSUBDIFF, values);
    }
}
