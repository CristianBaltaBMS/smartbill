/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgAmproc;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgAmprocRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgAmprocDao extends DAOImpl<PgAmprocRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc, Long> {

    /**
     * Create a new PgAmprocDao without any configuration
     */
    public PgAmprocDao() {
        super(PgAmproc.PG_AMPROC, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc.class);
    }

    /**
     * Create a new PgAmprocDao with an attached configuration
     */
    public PgAmprocDao(Configuration configuration) {
        super(PgAmproc.PG_AMPROC, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmproc.PG_AMPROC.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchByOid(Long... values) {
        return fetch(PgAmproc.PG_AMPROC.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc fetchOneByOid(Long value) {
        return fetchOne(PgAmproc.PG_AMPROC.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchOptionalByOid(Long value) {
        return fetchOptional(PgAmproc.PG_AMPROC.OID, value);
    }

    /**
     * Fetch records that have <code>amprocfamily BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchRangeOfAmprocfamily(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmproc.PG_AMPROC.AMPROCFAMILY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amprocfamily IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchByAmprocfamily(Long... values) {
        return fetch(PgAmproc.PG_AMPROC.AMPROCFAMILY, values);
    }

    /**
     * Fetch records that have <code>amproclefttype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchRangeOfAmproclefttype(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmproc.PG_AMPROC.AMPROCLEFTTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amproclefttype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchByAmproclefttype(Long... values) {
        return fetch(PgAmproc.PG_AMPROC.AMPROCLEFTTYPE, values);
    }

    /**
     * Fetch records that have <code>amprocrighttype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchRangeOfAmprocrighttype(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmproc.PG_AMPROC.AMPROCRIGHTTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amprocrighttype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchByAmprocrighttype(Long... values) {
        return fetch(PgAmproc.PG_AMPROC.AMPROCRIGHTTYPE, values);
    }

    /**
     * Fetch records that have <code>amprocnum BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchRangeOfAmprocnum(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(PgAmproc.PG_AMPROC.AMPROCNUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amprocnum IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchByAmprocnum(Short... values) {
        return fetch(PgAmproc.PG_AMPROC.AMPROCNUM, values);
    }

    /**
     * Fetch records that have <code>amproc BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchRangeOfAmproc(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgAmproc.PG_AMPROC.AMPROC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amproc IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmproc> fetchByAmproc(String... values) {
        return fetch(PgAmproc.PG_AMPROC.AMPROC, values);
    }
}
