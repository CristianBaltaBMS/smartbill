/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgForeignServer;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgForeignServerRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgForeignServerDao extends DAOImpl<PgForeignServerRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer, Long> {

    /**
     * Create a new PgForeignServerDao without any configuration
     */
    public PgForeignServerDao() {
        super(PgForeignServer.PG_FOREIGN_SERVER, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer.class);
    }

    /**
     * Create a new PgForeignServerDao with an attached configuration
     */
    public PgForeignServerDao(Configuration configuration) {
        super(PgForeignServer.PG_FOREIGN_SERVER, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgForeignServer.PG_FOREIGN_SERVER.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchByOid(Long... values) {
        return fetch(PgForeignServer.PG_FOREIGN_SERVER.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer fetchOneByOid(Long value) {
        return fetchOne(PgForeignServer.PG_FOREIGN_SERVER.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchOptionalByOid(Long value) {
        return fetchOptional(PgForeignServer.PG_FOREIGN_SERVER.OID, value);
    }

    /**
     * Fetch records that have <code>srvname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchRangeOfSrvname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgForeignServer.PG_FOREIGN_SERVER.SRVNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>srvname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchBySrvname(String... values) {
        return fetch(PgForeignServer.PG_FOREIGN_SERVER.SRVNAME, values);
    }

    /**
     * Fetch a unique record that has <code>srvname = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer fetchOneBySrvname(String value) {
        return fetchOne(PgForeignServer.PG_FOREIGN_SERVER.SRVNAME, value);
    }

    /**
     * Fetch a unique record that has <code>srvname = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchOptionalBySrvname(String value) {
        return fetchOptional(PgForeignServer.PG_FOREIGN_SERVER.SRVNAME, value);
    }

    /**
     * Fetch records that have <code>srvowner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchRangeOfSrvowner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgForeignServer.PG_FOREIGN_SERVER.SRVOWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>srvowner IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchBySrvowner(Long... values) {
        return fetch(PgForeignServer.PG_FOREIGN_SERVER.SRVOWNER, values);
    }

    /**
     * Fetch records that have <code>srvfdw BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchRangeOfSrvfdw(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgForeignServer.PG_FOREIGN_SERVER.SRVFDW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>srvfdw IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchBySrvfdw(Long... values) {
        return fetch(PgForeignServer.PG_FOREIGN_SERVER.SRVFDW, values);
    }

    /**
     * Fetch records that have <code>srvtype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchRangeOfSrvtype(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgForeignServer.PG_FOREIGN_SERVER.SRVTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>srvtype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchBySrvtype(String... values) {
        return fetch(PgForeignServer.PG_FOREIGN_SERVER.SRVTYPE, values);
    }

    /**
     * Fetch records that have <code>srvversion BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchRangeOfSrvversion(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgForeignServer.PG_FOREIGN_SERVER.SRVVERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>srvversion IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchBySrvversion(String... values) {
        return fetch(PgForeignServer.PG_FOREIGN_SERVER.SRVVERSION, values);
    }

    /**
     * Fetch records that have <code>srvacl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchRangeOfSrvacl(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgForeignServer.PG_FOREIGN_SERVER.SRVACL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>srvacl IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchBySrvacl(String[]... values) {
        return fetch(PgForeignServer.PG_FOREIGN_SERVER.SRVACL, values);
    }

    /**
     * Fetch records that have <code>srvoptions BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchRangeOfSrvoptions(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgForeignServer.PG_FOREIGN_SERVER.SRVOPTIONS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>srvoptions IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgForeignServer> fetchBySrvoptions(String[]... values) {
        return fetch(PgForeignServer.PG_FOREIGN_SERVER.SRVOPTIONS, values);
    }
}
