/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgTsDict;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgTsDictRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgTsDictDao extends DAOImpl<PgTsDictRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict, Long> {

    /**
     * Create a new PgTsDictDao without any configuration
     */
    public PgTsDictDao() {
        super(PgTsDict.PG_TS_DICT, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict.class);
    }

    /**
     * Create a new PgTsDictDao with an attached configuration
     */
    public PgTsDictDao(Configuration configuration) {
        super(PgTsDict.PG_TS_DICT, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTsDict.PG_TS_DICT.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchByOid(Long... values) {
        return fetch(PgTsDict.PG_TS_DICT.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict fetchOneByOid(Long value) {
        return fetchOne(PgTsDict.PG_TS_DICT.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchOptionalByOid(Long value) {
        return fetchOptional(PgTsDict.PG_TS_DICT.OID, value);
    }

    /**
     * Fetch records that have <code>dictname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchRangeOfDictname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgTsDict.PG_TS_DICT.DICTNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dictname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchByDictname(String... values) {
        return fetch(PgTsDict.PG_TS_DICT.DICTNAME, values);
    }

    /**
     * Fetch records that have <code>dictnamespace BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchRangeOfDictnamespace(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTsDict.PG_TS_DICT.DICTNAMESPACE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dictnamespace IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchByDictnamespace(Long... values) {
        return fetch(PgTsDict.PG_TS_DICT.DICTNAMESPACE, values);
    }

    /**
     * Fetch records that have <code>dictowner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchRangeOfDictowner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTsDict.PG_TS_DICT.DICTOWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dictowner IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchByDictowner(Long... values) {
        return fetch(PgTsDict.PG_TS_DICT.DICTOWNER, values);
    }

    /**
     * Fetch records that have <code>dicttemplate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchRangeOfDicttemplate(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTsDict.PG_TS_DICT.DICTTEMPLATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dicttemplate IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchByDicttemplate(Long... values) {
        return fetch(PgTsDict.PG_TS_DICT.DICTTEMPLATE, values);
    }

    /**
     * Fetch records that have <code>dictinitoption BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchRangeOfDictinitoption(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgTsDict.PG_TS_DICT.DICTINITOPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dictinitoption IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsDict> fetchByDictinitoption(String... values) {
        return fetch(PgTsDict.PG_TS_DICT.DICTINITOPTION, values);
    }
}
