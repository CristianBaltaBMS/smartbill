/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgOpfamily;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgOpfamilyRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgOpfamilyDao extends DAOImpl<PgOpfamilyRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily, Long> {

    /**
     * Create a new PgOpfamilyDao without any configuration
     */
    public PgOpfamilyDao() {
        super(PgOpfamily.PG_OPFAMILY, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily.class);
    }

    /**
     * Create a new PgOpfamilyDao with an attached configuration
     */
    public PgOpfamilyDao(Configuration configuration) {
        super(PgOpfamily.PG_OPFAMILY, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpfamily.PG_OPFAMILY.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchByOid(Long... values) {
        return fetch(PgOpfamily.PG_OPFAMILY.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily fetchOneByOid(Long value) {
        return fetchOne(PgOpfamily.PG_OPFAMILY.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchOptionalByOid(Long value) {
        return fetchOptional(PgOpfamily.PG_OPFAMILY.OID, value);
    }

    /**
     * Fetch records that have <code>opfmethod BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchRangeOfOpfmethod(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpfamily.PG_OPFAMILY.OPFMETHOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opfmethod IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchByOpfmethod(Long... values) {
        return fetch(PgOpfamily.PG_OPFAMILY.OPFMETHOD, values);
    }

    /**
     * Fetch records that have <code>opfname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchRangeOfOpfname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgOpfamily.PG_OPFAMILY.OPFNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opfname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchByOpfname(String... values) {
        return fetch(PgOpfamily.PG_OPFAMILY.OPFNAME, values);
    }

    /**
     * Fetch records that have <code>opfnamespace BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchRangeOfOpfnamespace(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpfamily.PG_OPFAMILY.OPFNAMESPACE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opfnamespace IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchByOpfnamespace(Long... values) {
        return fetch(PgOpfamily.PG_OPFAMILY.OPFNAMESPACE, values);
    }

    /**
     * Fetch records that have <code>opfowner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchRangeOfOpfowner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgOpfamily.PG_OPFAMILY.OPFOWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>opfowner IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgOpfamily> fetchByOpfowner(Long... values) {
        return fetch(PgOpfamily.PG_OPFAMILY.OPFOWNER, values);
    }
}
