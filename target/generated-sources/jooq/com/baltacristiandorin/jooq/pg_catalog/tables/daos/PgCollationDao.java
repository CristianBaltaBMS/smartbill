/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgCollation;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgCollationRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgCollationDao extends DAOImpl<PgCollationRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation, Long> {

    /**
     * Create a new PgCollationDao without any configuration
     */
    public PgCollationDao() {
        super(PgCollation.PG_COLLATION, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation.class);
    }

    /**
     * Create a new PgCollationDao with an attached configuration
     */
    public PgCollationDao(Configuration configuration) {
        super(PgCollation.PG_COLLATION, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByOid(Long... values) {
        return fetch(PgCollation.PG_COLLATION.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation fetchOneByOid(Long value) {
        return fetchOne(PgCollation.PG_COLLATION.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchOptionalByOid(Long value) {
        return fetchOptional(PgCollation.PG_COLLATION.OID, value);
    }

    /**
     * Fetch records that have <code>collname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfCollname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByCollname(String... values) {
        return fetch(PgCollation.PG_COLLATION.COLLNAME, values);
    }

    /**
     * Fetch records that have <code>collnamespace BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfCollnamespace(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLNAMESPACE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collnamespace IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByCollnamespace(Long... values) {
        return fetch(PgCollation.PG_COLLATION.COLLNAMESPACE, values);
    }

    /**
     * Fetch records that have <code>collowner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfCollowner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLOWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collowner IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByCollowner(Long... values) {
        return fetch(PgCollation.PG_COLLATION.COLLOWNER, values);
    }

    /**
     * Fetch records that have <code>collprovider BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfCollprovider(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLPROVIDER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collprovider IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByCollprovider(String... values) {
        return fetch(PgCollation.PG_COLLATION.COLLPROVIDER, values);
    }

    /**
     * Fetch records that have <code>collisdeterministic BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfCollisdeterministic(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLISDETERMINISTIC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collisdeterministic IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByCollisdeterministic(Boolean... values) {
        return fetch(PgCollation.PG_COLLATION.COLLISDETERMINISTIC, values);
    }

    /**
     * Fetch records that have <code>collencoding BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfCollencoding(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLENCODING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collencoding IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByCollencoding(Integer... values) {
        return fetch(PgCollation.PG_COLLATION.COLLENCODING, values);
    }

    /**
     * Fetch records that have <code>collcollate BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfCollcollate(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLCOLLATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collcollate IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByCollcollate(String... values) {
        return fetch(PgCollation.PG_COLLATION.COLLCOLLATE, values);
    }

    /**
     * Fetch records that have <code>collctype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfCollctype(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLCTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collctype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByCollctype(String... values) {
        return fetch(PgCollation.PG_COLLATION.COLLCTYPE, values);
    }

    /**
     * Fetch records that have <code>colliculocale BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfColliculocale(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLICULOCALE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>colliculocale IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByColliculocale(String... values) {
        return fetch(PgCollation.PG_COLLATION.COLLICULOCALE, values);
    }

    /**
     * Fetch records that have <code>collversion BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchRangeOfCollversion(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgCollation.PG_COLLATION.COLLVERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>collversion IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCollation> fetchByCollversion(String... values) {
        return fetch(PgCollation.PG_COLLATION.COLLVERSION, values);
    }
}
