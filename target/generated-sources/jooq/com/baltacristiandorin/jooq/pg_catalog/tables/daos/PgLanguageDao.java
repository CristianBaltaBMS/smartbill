/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgLanguage;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgLanguageRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgLanguageDao extends DAOImpl<PgLanguageRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage, Long> {

    /**
     * Create a new PgLanguageDao without any configuration
     */
    public PgLanguageDao() {
        super(PgLanguage.PG_LANGUAGE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage.class);
    }

    /**
     * Create a new PgLanguageDao with an attached configuration
     */
    public PgLanguageDao(Configuration configuration) {
        super(PgLanguage.PG_LANGUAGE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgLanguage.PG_LANGUAGE.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchByOid(Long... values) {
        return fetch(PgLanguage.PG_LANGUAGE.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage fetchOneByOid(Long value) {
        return fetchOne(PgLanguage.PG_LANGUAGE.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchOptionalByOid(Long value) {
        return fetchOptional(PgLanguage.PG_LANGUAGE.OID, value);
    }

    /**
     * Fetch records that have <code>lanname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchRangeOfLanname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgLanguage.PG_LANGUAGE.LANNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lanname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchByLanname(String... values) {
        return fetch(PgLanguage.PG_LANGUAGE.LANNAME, values);
    }

    /**
     * Fetch a unique record that has <code>lanname = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage fetchOneByLanname(String value) {
        return fetchOne(PgLanguage.PG_LANGUAGE.LANNAME, value);
    }

    /**
     * Fetch a unique record that has <code>lanname = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchOptionalByLanname(String value) {
        return fetchOptional(PgLanguage.PG_LANGUAGE.LANNAME, value);
    }

    /**
     * Fetch records that have <code>lanowner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchRangeOfLanowner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgLanguage.PG_LANGUAGE.LANOWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lanowner IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchByLanowner(Long... values) {
        return fetch(PgLanguage.PG_LANGUAGE.LANOWNER, values);
    }

    /**
     * Fetch records that have <code>lanispl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchRangeOfLanispl(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PgLanguage.PG_LANGUAGE.LANISPL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lanispl IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchByLanispl(Boolean... values) {
        return fetch(PgLanguage.PG_LANGUAGE.LANISPL, values);
    }

    /**
     * Fetch records that have <code>lanpltrusted BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchRangeOfLanpltrusted(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PgLanguage.PG_LANGUAGE.LANPLTRUSTED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lanpltrusted IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchByLanpltrusted(Boolean... values) {
        return fetch(PgLanguage.PG_LANGUAGE.LANPLTRUSTED, values);
    }

    /**
     * Fetch records that have <code>lanplcallfoid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchRangeOfLanplcallfoid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgLanguage.PG_LANGUAGE.LANPLCALLFOID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lanplcallfoid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchByLanplcallfoid(Long... values) {
        return fetch(PgLanguage.PG_LANGUAGE.LANPLCALLFOID, values);
    }

    /**
     * Fetch records that have <code>laninline BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchRangeOfLaninline(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgLanguage.PG_LANGUAGE.LANINLINE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>laninline IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchByLaninline(Long... values) {
        return fetch(PgLanguage.PG_LANGUAGE.LANINLINE, values);
    }

    /**
     * Fetch records that have <code>lanvalidator BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchRangeOfLanvalidator(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgLanguage.PG_LANGUAGE.LANVALIDATOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lanvalidator IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchByLanvalidator(Long... values) {
        return fetch(PgLanguage.PG_LANGUAGE.LANVALIDATOR, values);
    }

    /**
     * Fetch records that have <code>lanacl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchRangeOfLanacl(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgLanguage.PG_LANGUAGE.LANACL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>lanacl IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLanguage> fetchByLanacl(String[]... values) {
        return fetch(PgLanguage.PG_LANGUAGE.LANACL, values);
    }
}
