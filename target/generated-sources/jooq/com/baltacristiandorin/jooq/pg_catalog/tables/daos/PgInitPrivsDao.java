/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgInitPrivs;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgInitPrivsRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgInitPrivsDao extends DAOImpl<PgInitPrivsRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs, Record3<Long, Long, Integer>> {

    /**
     * Create a new PgInitPrivsDao without any configuration
     */
    public PgInitPrivsDao() {
        super(PgInitPrivs.PG_INIT_PRIVS, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs.class);
    }

    /**
     * Create a new PgInitPrivsDao with an attached configuration
     */
    public PgInitPrivsDao(Configuration configuration) {
        super(PgInitPrivs.PG_INIT_PRIVS, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs.class, configuration);
    }

    @Override
    public Record3<Long, Long, Integer> getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs object) {
        return compositeKeyRecord(object.getObjoid(), object.getClassoid(), object.getObjsubid());
    }

    /**
     * Fetch records that have <code>objoid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchRangeOfObjoid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgInitPrivs.PG_INIT_PRIVS.OBJOID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>objoid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchByObjoid(Long... values) {
        return fetch(PgInitPrivs.PG_INIT_PRIVS.OBJOID, values);
    }

    /**
     * Fetch records that have <code>classoid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchRangeOfClassoid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgInitPrivs.PG_INIT_PRIVS.CLASSOID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>classoid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchByClassoid(Long... values) {
        return fetch(PgInitPrivs.PG_INIT_PRIVS.CLASSOID, values);
    }

    /**
     * Fetch records that have <code>objsubid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchRangeOfObjsubid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PgInitPrivs.PG_INIT_PRIVS.OBJSUBID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>objsubid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchByObjsubid(Integer... values) {
        return fetch(PgInitPrivs.PG_INIT_PRIVS.OBJSUBID, values);
    }

    /**
     * Fetch records that have <code>privtype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchRangeOfPrivtype(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgInitPrivs.PG_INIT_PRIVS.PRIVTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>privtype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchByPrivtype(String... values) {
        return fetch(PgInitPrivs.PG_INIT_PRIVS.PRIVTYPE, values);
    }

    /**
     * Fetch records that have <code>initprivs BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchRangeOfInitprivs(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgInitPrivs.PG_INIT_PRIVS.INITPRIVS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>initprivs IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgInitPrivs> fetchByInitprivs(String[]... values) {
        return fetch(PgInitPrivs.PG_INIT_PRIVS.INITPRIVS, values);
    }
}
