/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgLargeobject;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgLargeobjectRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgLargeobjectDao extends DAOImpl<PgLargeobjectRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject, Record2<Long, Integer>> {

    /**
     * Create a new PgLargeobjectDao without any configuration
     */
    public PgLargeobjectDao() {
        super(PgLargeobject.PG_LARGEOBJECT, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject.class);
    }

    /**
     * Create a new PgLargeobjectDao with an attached configuration
     */
    public PgLargeobjectDao(Configuration configuration) {
        super(PgLargeobject.PG_LARGEOBJECT, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject.class, configuration);
    }

    @Override
    public Record2<Long, Integer> getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject object) {
        return compositeKeyRecord(object.getLoid(), object.getPageno());
    }

    /**
     * Fetch records that have <code>loid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject> fetchRangeOfLoid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgLargeobject.PG_LARGEOBJECT.LOID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>loid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject> fetchByLoid(Long... values) {
        return fetch(PgLargeobject.PG_LARGEOBJECT.LOID, values);
    }

    /**
     * Fetch records that have <code>pageno BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject> fetchRangeOfPageno(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PgLargeobject.PG_LARGEOBJECT.PAGENO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pageno IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject> fetchByPageno(Integer... values) {
        return fetch(PgLargeobject.PG_LARGEOBJECT.PAGENO, values);
    }

    /**
     * Fetch records that have <code>data BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject> fetchRangeOfData(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(PgLargeobject.PG_LARGEOBJECT.DATA, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>data IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgLargeobject> fetchByData(byte[]... values) {
        return fetch(PgLargeobject.PG_LARGEOBJECT.DATA, values);
    }
}
