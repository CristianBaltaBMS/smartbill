/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgAmop;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgAmopRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgAmopDao extends DAOImpl<PgAmopRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop, Long> {

    /**
     * Create a new PgAmopDao without any configuration
     */
    public PgAmopDao() {
        super(PgAmop.PG_AMOP, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop.class);
    }

    /**
     * Create a new PgAmopDao with an attached configuration
     */
    public PgAmopDao(Configuration configuration) {
        super(PgAmop.PG_AMOP, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmop.PG_AMOP.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchByOid(Long... values) {
        return fetch(PgAmop.PG_AMOP.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop fetchOneByOid(Long value) {
        return fetchOne(PgAmop.PG_AMOP.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchOptionalByOid(Long value) {
        return fetchOptional(PgAmop.PG_AMOP.OID, value);
    }

    /**
     * Fetch records that have <code>amopfamily BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchRangeOfAmopfamily(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmop.PG_AMOP.AMOPFAMILY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amopfamily IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchByAmopfamily(Long... values) {
        return fetch(PgAmop.PG_AMOP.AMOPFAMILY, values);
    }

    /**
     * Fetch records that have <code>amoplefttype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchRangeOfAmoplefttype(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmop.PG_AMOP.AMOPLEFTTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amoplefttype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchByAmoplefttype(Long... values) {
        return fetch(PgAmop.PG_AMOP.AMOPLEFTTYPE, values);
    }

    /**
     * Fetch records that have <code>amoprighttype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchRangeOfAmoprighttype(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmop.PG_AMOP.AMOPRIGHTTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amoprighttype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchByAmoprighttype(Long... values) {
        return fetch(PgAmop.PG_AMOP.AMOPRIGHTTYPE, values);
    }

    /**
     * Fetch records that have <code>amopstrategy BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchRangeOfAmopstrategy(Short lowerInclusive, Short upperInclusive) {
        return fetchRange(PgAmop.PG_AMOP.AMOPSTRATEGY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amopstrategy IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchByAmopstrategy(Short... values) {
        return fetch(PgAmop.PG_AMOP.AMOPSTRATEGY, values);
    }

    /**
     * Fetch records that have <code>amoppurpose BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchRangeOfAmoppurpose(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgAmop.PG_AMOP.AMOPPURPOSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amoppurpose IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchByAmoppurpose(String... values) {
        return fetch(PgAmop.PG_AMOP.AMOPPURPOSE, values);
    }

    /**
     * Fetch records that have <code>amopopr BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchRangeOfAmopopr(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmop.PG_AMOP.AMOPOPR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amopopr IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchByAmopopr(Long... values) {
        return fetch(PgAmop.PG_AMOP.AMOPOPR, values);
    }

    /**
     * Fetch records that have <code>amopmethod BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchRangeOfAmopmethod(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmop.PG_AMOP.AMOPMETHOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amopmethod IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchByAmopmethod(Long... values) {
        return fetch(PgAmop.PG_AMOP.AMOPMETHOD, values);
    }

    /**
     * Fetch records that have <code>amopsortfamily BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchRangeOfAmopsortfamily(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAmop.PG_AMOP.AMOPSORTFAMILY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amopsortfamily IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAmop> fetchByAmopsortfamily(Long... values) {
        return fetch(PgAmop.PG_AMOP.AMOPSORTFAMILY, values);
    }
}
