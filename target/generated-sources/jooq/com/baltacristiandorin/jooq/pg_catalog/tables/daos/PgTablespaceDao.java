/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgTablespace;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgTablespaceRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgTablespaceDao extends DAOImpl<PgTablespaceRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace, Long> {

    /**
     * Create a new PgTablespaceDao without any configuration
     */
    public PgTablespaceDao() {
        super(PgTablespace.PG_TABLESPACE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace.class);
    }

    /**
     * Create a new PgTablespaceDao with an attached configuration
     */
    public PgTablespaceDao(Configuration configuration) {
        super(PgTablespace.PG_TABLESPACE, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTablespace.PG_TABLESPACE.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchByOid(Long... values) {
        return fetch(PgTablespace.PG_TABLESPACE.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace fetchOneByOid(Long value) {
        return fetchOne(PgTablespace.PG_TABLESPACE.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchOptionalByOid(Long value) {
        return fetchOptional(PgTablespace.PG_TABLESPACE.OID, value);
    }

    /**
     * Fetch records that have <code>spcname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchRangeOfSpcname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgTablespace.PG_TABLESPACE.SPCNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>spcname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchBySpcname(String... values) {
        return fetch(PgTablespace.PG_TABLESPACE.SPCNAME, values);
    }

    /**
     * Fetch a unique record that has <code>spcname = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace fetchOneBySpcname(String value) {
        return fetchOne(PgTablespace.PG_TABLESPACE.SPCNAME, value);
    }

    /**
     * Fetch a unique record that has <code>spcname = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchOptionalBySpcname(String value) {
        return fetchOptional(PgTablespace.PG_TABLESPACE.SPCNAME, value);
    }

    /**
     * Fetch records that have <code>spcowner BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchRangeOfSpcowner(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTablespace.PG_TABLESPACE.SPCOWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>spcowner IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchBySpcowner(Long... values) {
        return fetch(PgTablespace.PG_TABLESPACE.SPCOWNER, values);
    }

    /**
     * Fetch records that have <code>spcacl BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchRangeOfSpcacl(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgTablespace.PG_TABLESPACE.SPCACL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>spcacl IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchBySpcacl(String[]... values) {
        return fetch(PgTablespace.PG_TABLESPACE.SPCACL, values);
    }

    /**
     * Fetch records that have <code>spcoptions BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchRangeOfSpcoptions(String[] lowerInclusive, String[] upperInclusive) {
        return fetchRange(PgTablespace.PG_TABLESPACE.SPCOPTIONS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>spcoptions IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTablespace> fetchBySpcoptions(String[]... values) {
        return fetch(PgTablespace.PG_TABLESPACE.SPCOPTIONS, values);
    }
}
