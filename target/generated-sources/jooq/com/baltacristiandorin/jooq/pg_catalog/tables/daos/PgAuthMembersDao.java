/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgAuthMembers;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgAuthMembersRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgAuthMembersDao extends DAOImpl<PgAuthMembersRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers, Record2<Long, Long>> {

    /**
     * Create a new PgAuthMembersDao without any configuration
     */
    public PgAuthMembersDao() {
        super(PgAuthMembers.PG_AUTH_MEMBERS, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers.class);
    }

    /**
     * Create a new PgAuthMembersDao with an attached configuration
     */
    public PgAuthMembersDao(Configuration configuration) {
        super(PgAuthMembers.PG_AUTH_MEMBERS, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers.class, configuration);
    }

    @Override
    public Record2<Long, Long> getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers object) {
        return compositeKeyRecord(object.getRoleid(), object.getMember());
    }

    /**
     * Fetch records that have <code>roleid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers> fetchRangeOfRoleid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAuthMembers.PG_AUTH_MEMBERS.ROLEID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>roleid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers> fetchByRoleid(Long... values) {
        return fetch(PgAuthMembers.PG_AUTH_MEMBERS.ROLEID, values);
    }

    /**
     * Fetch records that have <code>member BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers> fetchRangeOfMember(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAuthMembers.PG_AUTH_MEMBERS.MEMBER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>member IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers> fetchByMember(Long... values) {
        return fetch(PgAuthMembers.PG_AUTH_MEMBERS.MEMBER, values);
    }

    /**
     * Fetch records that have <code>grantor BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers> fetchRangeOfGrantor(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAuthMembers.PG_AUTH_MEMBERS.GRANTOR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>grantor IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers> fetchByGrantor(Long... values) {
        return fetch(PgAuthMembers.PG_AUTH_MEMBERS.GRANTOR, values);
    }

    /**
     * Fetch records that have <code>admin_option BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers> fetchRangeOfAdminOption(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(PgAuthMembers.PG_AUTH_MEMBERS.ADMIN_OPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>admin_option IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAuthMembers> fetchByAdminOption(Boolean... values) {
        return fetch(PgAuthMembers.PG_AUTH_MEMBERS.ADMIN_OPTION, values);
    }
}
