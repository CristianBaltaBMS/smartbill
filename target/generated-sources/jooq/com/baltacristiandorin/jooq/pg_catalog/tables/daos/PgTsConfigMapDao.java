/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgTsConfigMap;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgTsConfigMapRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgTsConfigMapDao extends DAOImpl<PgTsConfigMapRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap, Record3<Long, Integer, Integer>> {

    /**
     * Create a new PgTsConfigMapDao without any configuration
     */
    public PgTsConfigMapDao() {
        super(PgTsConfigMap.PG_TS_CONFIG_MAP, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap.class);
    }

    /**
     * Create a new PgTsConfigMapDao with an attached configuration
     */
    public PgTsConfigMapDao(Configuration configuration) {
        super(PgTsConfigMap.PG_TS_CONFIG_MAP, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap.class, configuration);
    }

    @Override
    public Record3<Long, Integer, Integer> getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap object) {
        return compositeKeyRecord(object.getMapcfg(), object.getMaptokentype(), object.getMapseqno());
    }

    /**
     * Fetch records that have <code>mapcfg BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap> fetchRangeOfMapcfg(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTsConfigMap.PG_TS_CONFIG_MAP.MAPCFG, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mapcfg IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap> fetchByMapcfg(Long... values) {
        return fetch(PgTsConfigMap.PG_TS_CONFIG_MAP.MAPCFG, values);
    }

    /**
     * Fetch records that have <code>maptokentype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap> fetchRangeOfMaptokentype(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PgTsConfigMap.PG_TS_CONFIG_MAP.MAPTOKENTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>maptokentype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap> fetchByMaptokentype(Integer... values) {
        return fetch(PgTsConfigMap.PG_TS_CONFIG_MAP.MAPTOKENTYPE, values);
    }

    /**
     * Fetch records that have <code>mapseqno BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap> fetchRangeOfMapseqno(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PgTsConfigMap.PG_TS_CONFIG_MAP.MAPSEQNO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mapseqno IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap> fetchByMapseqno(Integer... values) {
        return fetch(PgTsConfigMap.PG_TS_CONFIG_MAP.MAPSEQNO, values);
    }

    /**
     * Fetch records that have <code>mapdict BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap> fetchRangeOfMapdict(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgTsConfigMap.PG_TS_CONFIG_MAP.MAPDICT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mapdict IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgTsConfigMap> fetchByMapdict(Long... values) {
        return fetch(PgTsConfigMap.PG_TS_CONFIG_MAP.MAPDICT, values);
    }
}
