/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgCast;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgCastRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgCastDao extends DAOImpl<PgCastRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast, Long> {

    /**
     * Create a new PgCastDao without any configuration
     */
    public PgCastDao() {
        super(PgCast.PG_CAST, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast.class);
    }

    /**
     * Create a new PgCastDao with an attached configuration
     */
    public PgCastDao(Configuration configuration) {
        super(PgCast.PG_CAST, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgCast.PG_CAST.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchByOid(Long... values) {
        return fetch(PgCast.PG_CAST.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast fetchOneByOid(Long value) {
        return fetchOne(PgCast.PG_CAST.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchOptionalByOid(Long value) {
        return fetchOptional(PgCast.PG_CAST.OID, value);
    }

    /**
     * Fetch records that have <code>castsource BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchRangeOfCastsource(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgCast.PG_CAST.CASTSOURCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>castsource IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchByCastsource(Long... values) {
        return fetch(PgCast.PG_CAST.CASTSOURCE, values);
    }

    /**
     * Fetch records that have <code>casttarget BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchRangeOfCasttarget(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgCast.PG_CAST.CASTTARGET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>casttarget IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchByCasttarget(Long... values) {
        return fetch(PgCast.PG_CAST.CASTTARGET, values);
    }

    /**
     * Fetch records that have <code>castfunc BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchRangeOfCastfunc(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgCast.PG_CAST.CASTFUNC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>castfunc IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchByCastfunc(Long... values) {
        return fetch(PgCast.PG_CAST.CASTFUNC, values);
    }

    /**
     * Fetch records that have <code>castcontext BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchRangeOfCastcontext(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgCast.PG_CAST.CASTCONTEXT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>castcontext IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchByCastcontext(String... values) {
        return fetch(PgCast.PG_CAST.CASTCONTEXT, values);
    }

    /**
     * Fetch records that have <code>castmethod BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchRangeOfCastmethod(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgCast.PG_CAST.CASTMETHOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>castmethod IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgCast> fetchByCastmethod(String... values) {
        return fetch(PgCast.PG_CAST.CASTMETHOD, values);
    }
}
