/*
 * This file is generated by jOOQ.
 */
package com.baltacristiandorin.jooq.pg_catalog.tables.daos;


import com.baltacristiandorin.jooq.pg_catalog.tables.PgAm;
import com.baltacristiandorin.jooq.pg_catalog.tables.records.PgAmRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PgAmDao extends DAOImpl<PgAmRecord, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm, Long> {

    /**
     * Create a new PgAmDao without any configuration
     */
    public PgAmDao() {
        super(PgAm.PG_AM, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm.class);
    }

    /**
     * Create a new PgAmDao with an attached configuration
     */
    public PgAmDao(Configuration configuration) {
        super(PgAm.PG_AM, com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm.class, configuration);
    }

    @Override
    public Long getId(com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm object) {
        return object.getOid();
    }

    /**
     * Fetch records that have <code>oid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchRangeOfOid(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PgAm.PG_AM.OID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>oid IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchByOid(Long... values) {
        return fetch(PgAm.PG_AM.OID, values);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm fetchOneByOid(Long value) {
        return fetchOne(PgAm.PG_AM.OID, value);
    }

    /**
     * Fetch a unique record that has <code>oid = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchOptionalByOid(Long value) {
        return fetchOptional(PgAm.PG_AM.OID, value);
    }

    /**
     * Fetch records that have <code>amname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchRangeOfAmname(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgAm.PG_AM.AMNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amname IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchByAmname(String... values) {
        return fetch(PgAm.PG_AM.AMNAME, values);
    }

    /**
     * Fetch a unique record that has <code>amname = value</code>
     */
    public com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm fetchOneByAmname(String value) {
        return fetchOne(PgAm.PG_AM.AMNAME, value);
    }

    /**
     * Fetch a unique record that has <code>amname = value</code>
     */
    public Optional<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchOptionalByAmname(String value) {
        return fetchOptional(PgAm.PG_AM.AMNAME, value);
    }

    /**
     * Fetch records that have <code>amhandler BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchRangeOfAmhandler(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgAm.PG_AM.AMHANDLER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amhandler IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchByAmhandler(String... values) {
        return fetch(PgAm.PG_AM.AMHANDLER, values);
    }

    /**
     * Fetch records that have <code>amtype BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchRangeOfAmtype(String lowerInclusive, String upperInclusive) {
        return fetchRange(PgAm.PG_AM.AMTYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amtype IN (values)</code>
     */
    public List<com.baltacristiandorin.jooq.pg_catalog.tables.pojos.PgAm> fetchByAmtype(String... values) {
        return fetch(PgAm.PG_AM.AMTYPE, values);
    }
}
